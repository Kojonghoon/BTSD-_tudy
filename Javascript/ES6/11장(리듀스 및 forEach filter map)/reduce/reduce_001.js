//ES6 리듀스(reduce)

//1. 뜻
//사전적 의미
//	-->reduce : 줄이다.
//일반적으로 배열의 요소들을 순회(반복) 시키면서 어떤 처리를 한다라고 하면
//	-->for반복문을 많이 사용
//그러나 JS는 계속 발전하면서 여러 유용한 함수들을 만들어 제공
//forEach*(), map(), filter(), reduce()
//	-->배열을 순회하면서 해당 요소에 대해서 어떤 처리를 하고 싶다면
//	-->이 함수들을 적극 활용하자.


//2. map, filter, reduce
//	--> ES6 새롭게 추가된 메서드
//공통적인 특징
//	-->배열과 관련된 작업처리를 보다 쉽게 처리하도록 도움주는 것들.
//또, 배열의 각 요소들을 파라미터 값으로 받아서 처리.
//reduce() 메서드 사용법이 약간 더 복잡.


//3. 리듀스란 무엇인가?
//기본적으로 배열 요소에 대해서 리듀스 함수를 적용할 수 있으며, 각 요소에 대한 어떤 처리를 한 값들을 누적시켜 하나의 값으로 줄일 수 있다.
//리듀스는 배열의 각 요소에 대해 callback실행
//	-->한개의 출력 결과/ 문자열/ 배열/ 객체/ 딕셔너리
//	-->생성
//예를 들어, 배열 요소들의 전체 합을 구한다거나, 갯수, 길이 등을 누적하여 별도의 배열이나 객체로 만들어 낼 수 있다.


//4. 사용법
//배열.reduce(함수(누적값, 현재값, 현재인덱스, 원본배열), 초깃값)
//누적값	--> accumulator 	--> acc
//현재값 	--> current value	--> cur
//현재index	--> current index	--> idx
//원본배열	--> original array	--> src
//초깃값	--> initialValue	
//	--> 콜백 함수를 최초 호출시 제공하는 값
//	--> 설정 안하면 배열의 첫번째 요소가 지정.


//예제1. 학생 5명의 성적이 있는데 각 학생의 점수를 모두 더한 총합을 계산하시오?


//예제2. 특정 숫자 이상의 값들만 더하시오?